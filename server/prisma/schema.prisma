// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Character {
  id           String @id @unique
  name         String
  role         String
  health       Int    @default(30)
  age          String
  race         String
  languages    String @default("Nenhum Registro")
  affiliation  String @default("Nenhum Registro")
  previous     String @default("Nenhum Registro")
  defect       String @default("Nenhum Registro")
  ideas        String @default("Nenhum Registro")
  personality  String @default("Nenhum Registro")
  history      String @default("Nenhum Registro")
  perception   Int    @default(0)
  displacement Int    @default(0)
  iniviative   Int    @default(0)
  inspiration  Int    @default(0)

  xp         Int      @default(0)
  gold       Int      @default(50)
  created_at DateTime @default(now())

  characterAttributes CharacterAttributes[]
  characterExpertise  CharacterExpertise[]
  characterItens      CharacterItens[]
  characterSkills     CharacterSkills[]
  characterSpells     CharacterSpells[]
  CharacterDeath      CharacterDeath[]
}

model Items {
  id          Int      @id @unique @default(autoincrement())
  name        String
  description String
  created_at  DateTime @default(now())

  characterItens CharacterItens[]
}

model Attributes {
  id         Int      @id @unique @default(autoincrement())
  name       String   @unique
  created_at DateTime @default(now())

  characterAttributes CharacterAttributes[]
}

model Expertise {
  id         Int      @id @unique @default(autoincrement())
  name       String   @unique
  created_at DateTime @default(now())

  characterExpertise CharacterExpertise[]
}

model Skills {
  id          Int      @id @unique @default(autoincrement())
  name        String
  description String
  created_at  DateTime @default(now())

  characterSkills CharacterSkills[]
}

model Spells {
  id          Int      @id @unique @default(autoincrement())
  name        String
  description String
  created_at  DateTime @default(now())

  characterSpells CharacterSpells[]
}

model CharacterSkills {
  id          String   @id @unique @default(uuid())
  characterId String
  skillsId    Int
  value       String
  bonusValue  String?
  typeDamage  String?
  created_at  DateTime @default(now())

  character Character @relation(fields: [characterId], references: [id])
  skills    Skills    @relation(fields: [skillsId], references: [id])
}

model CharacterSpells {
  id          String   @id @unique @default(uuid())
  characterId String
  spellsId    Int
  value       String
  bonusValue  String?
  typeDamage  String?
  created_at  DateTime @default(now())

  character Character @relation(fields: [characterId], references: [id])
  spells    Spells    @relation(fields: [spellsId], references: [id])
}

model CharacterAttributes {
  id           String   @id @default(uuid())
  characterId  String
  attributesId Int
  value        Int      @default(0)
  created_at   DateTime @default(now())

  character Character  @relation(fields: [characterId], references: [id])
  attribute Attributes @relation(fields: [attributesId], references: [id])
}

model CharacterExpertise {
  id          String   @id @default(uuid())
  characterId String
  expertiseId Int
  value       Int      @default(0)
  created_at  DateTime @default(now())

  character Character @relation(fields: [characterId], references: [id])
  expertise Expertise @relation(fields: [expertiseId], references: [id])
}

model CharacterItens {
  id          String   @id @default(uuid())
  characterId String
  itemsId     Int
  value       String
  bonusValue  String
  typeDamage  String?
  created_at  DateTime @default(now())

  character Character @relation(fields: [characterId], references: [id])
  item      Items     @relation(fields: [itemsId], references: [id])
}

model CharacterDeath {
  id          String  @id @default(uuid())
  characterId String
  fail1       Boolean @default(false)
  fail2       Boolean @default(false)
  fail3       Boolean @default(false)
  success1    Boolean @default(false)
  success2    Boolean @default(false)
  success3    Boolean @default(false)

  character Character @relation(fields: [characterId], references: [id])
}
